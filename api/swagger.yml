openapi: 3.0.0

info:
  title: "Trail Service API"
  version: "1.0.0"
  description: "A simple API to manage trails"
  contact:
    name: "Henry Reid"
    email: "henryreid05@gmail.com"
    url: "https://henryreid.com"


servers:
  - url: "/api"

# Schemas
  # Trail
    # trail_id
    # name
    # difficulty
    # location
    # length
    # elevation_gain
    # owner_id
    # route_id

  # Owner
    # owner_id
    # name
    # email
    # is_admin

  # RouteType
    # route_id
    # route_type

  # TrailFeature
    # trail_id
    # feature_id
  # Feature
    # feature_id
    # feature_name
  # LocationPoint
    # location_point_id
    # latitude
    # longitude
    # description
    # sequenceNumber

components:
  schemas:
    Trail:
      type: "object"
      properties:
        trail_id:
          type: "integer"
        name:
          type: "string"
        difficulty:
          type: "string"
        location:
          type: "string"
        length:
          type: "number"
        elevation_gain:
          type: "number"
        owner_id:
          type: "integer"
        route_id:
          type: "integer"

    Owner:
      type: "object"
      properties:
        owner_id:
          type: "integer"
        name:
          type: "string"
        email:
          type: "string"
        is_admin:
          type: "boolean"

    RouteType:
      type: "object"
      properties:
        route_id:
          type: "integer"
        route_type:
          type: "string"

    TrailFeature:
      type: "object"
      properties:
        trail_id:
          type: "integer"
        feature_id:
          type: "integer"
    

    
# Paths
  # Trails
      # /trails
      # /trails/{trail_id}
    # Owners
      # /owners
      # /owners/{owner_id}
    # Route Types
      # /route_types
      # /route_types/{route_id}
    # Trail Features
      # /trail_features
      # /trail_features/{trail_id}
    # Features
      # /features
      # /features/{feature_id}
    # LocationPoints
      # /location_points
      # /location_points/{trail_id} 


paths:
  /trail_features:
    get:
      summary: "Get all TrailFeatures"
      operationId: "trail_features.read_all"
      responses:
        '200':
          description: "A list of TrailFeatures"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/TrailFeature"
    post:
      summary: "Create a new TrailFeature"
      operationId: "trail_features.create"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrailFeature"
      responses:
        '201':
          description: "TrailFeature created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrailFeature"
  /trail_features/{trail_id}/{feature_id}:
    get:
      summary: "Get a TrailFeature by Trail ID and Feature ID"
      operationId: "trail_features.read_one"
      parameters:
        - name: "trail_id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of the trail"
        - name: "feature_id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of the feature"
      responses:
        '200':
          description: "A TrailFeature"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrailFeature"
    put:
      summary: "Update a TrailFeature"
      operationId: "trail_features.update"
      parameters:
        - name: "trail_id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of the trail"
        - name: "feature_id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of the feature"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrailFeature"
      responses:
        '200':
          description: "TrailFeature updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrailFeature"
    delete:
      summary: "Delete a TrailFeature"
      operationId: "trail_features.delete"
      parameters:
        - name: "trail_id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of the trail"
        - name: "feature_id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of the feature"
      responses:
        '204':
          description: "TrailFeature deleted"
          
  /trails:
    get:
      summary: "Get all trails"
      operationId: "trails.read_all"
      responses:
        '200':
          description: "A list of trails"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Trail"
    post:
      summary: "Create a new trail"
      operationId: "trails.create"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trail"
      responses:
        '201':
          description: "Trail created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trail"
  /trails/{trail_id}:
    get:
      summary: "Get a trail by ID"
      operationId: "trails.read_one"
      parameters:
        - name: "trail_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "A trail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trail"
    put:
      summary: "Update a trail by ID"
      operationId: "trails.update"
      parameters:
        - name: "trail_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trail"
      responses:
        '200':
          description: "Trail updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trail"
    delete:
      summary: "Delete a trail by ID"
      operationId: "trails.delete"
      parameters:
        - name: "trail_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '204':
          description: "Trail deleted"

  /owners:
    get:
      summary: "Get all owners"
      operationId: "owners.read_all"
      responses:
        '200':
          description: "A list of owners"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Owner"
    post:
      summary: "Create a new owner"
      operationId: "owners.create"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Owner"
      responses:
        '201':
          description: "Owner created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Owner"
  /owners/{owner_id}:
    get:
      summary: "Get an owner by ID"
      operationId: "owners.read_one"
      parameters:
        - name: "owner_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "An owner"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Owner"
    put:
      summary: "Update an owner by ID"
      operationId: "owners.update"
      parameters:
        - name: "owner_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Owner"
      responses:
        '200':
          description: "Owner updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Owner"
    delete:
      summary: "Delete an owner by ID"
      operationId: "owners.delete"
      parameters:
        - name: "owner_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '204':
          description: "Owner deleted"
